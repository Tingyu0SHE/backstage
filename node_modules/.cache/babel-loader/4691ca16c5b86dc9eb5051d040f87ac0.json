{"ast":null,"code":"import _regeneratorRuntime from \"E:/houtai/backstage/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/houtai/backstage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      UserList: [],\n      state: \"\",\n      id: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.getUsers();\n  },\n  methods: {\n    getUsers: function getUsers() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get(\"/api/users\", {\n                  params: {\n                    query: \"\",\n                    page: 1,\n                    size: 4\n                  }\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.msg.status != 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error(\"数据查询失败\"));\n\n              case 8:\n                _this.UserList = res.data;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    changState: function changState(i) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http.get(\"/api/change\", {\n                  params: {\n                    status: _this2.UserList[i].isno,\n                    id: _this2.UserList[i].id\n                  }\n                });\n\n              case 2:\n                res = _context2.sent;\n                // console.log(this.$refs.state.id);\n                console.log(res);\n\n                if (!(res.data.status == 200)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.success(\"操作成功\"));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;EACAA,IADA,kBACA;IACA;MACAC,YADA;MAEAC,SAFA;MAGAC;IAHA;EAKA,CAPA;EAQAC,OARA,qBAQA;IACA;EACA,CAVA;EAWAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC;oBACAC,SADA;oBAEAC,OAFA;oBAGAC;kBAHA;gBADA,EADA;;cAAA;gBAAA;gBACAC,GADA,yBACAX,IADA;;gBAAA,MAQAW,qBARA;kBAAA;kBAAA;gBAAA;;gBAAA,iCAUA,8BAVA;;cAAA;gBAYA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA,CAfA;IAiBAC,UAjBA,sBAiBAC,CAjBA,EAiBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAN;oBACAO,+BADA;oBAEAX;kBAFA;gBADA,EADA;;cAAA;gBACAQ,GADA;gBAOA;gBACAI;;gBARA,MASAJ,sBATA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAWA,+BAXA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA;EA9BA;AAXA","names":["data","UserList","state","id","mounted","methods","getUsers","params","query","page","size","res","changState","i","status","console"],"sourceRoot":"src/View","sources":["User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/Welcome' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- card -->\r\n    <el-card class=\"box-card\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"10\">\r\n          <el-input placeholder=\"请输入内容\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\"\r\n          ><el-button type=\"primary\">添加用户</el-button></el-col\r\n        >\r\n      </el-row>\r\n\r\n      <!-- table -->\r\n      <el-table :data=\"UserList\" border style=\"width: 100%\">\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"50\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"r_name\" label=\"角色\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"isno\" label=\"状态\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <el-switch\r\n                ref=\"state\"\r\n                v-model=\"scope.row.isno\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#ff4949\"\r\n                @change=\"changState(scope.row.id - 1)\"\r\n              >\r\n              </el-switch>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template>\r\n            <div>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"编辑\"\r\n                placement=\"top\"\r\n                enterable=\"false\"\r\n              >\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"分配角色\"\r\n                placement=\"top\"\r\n                enterable=\"false\"\r\n              >\r\n                <el-button\r\n                  type=\"warning\"\r\n                  icon=\"el-icon-share\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"删除\"\r\n                placement=\"top\"\r\n                enterable=\"false\"\r\n              >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n      :current-page=\"currentPage4\"\r\n      :page-sizes=\"[100, 200, 300, 400]\"\r\n      :page-size=\"100\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"400\">\r\n    </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      UserList: [],\r\n      state: \"\",\r\n      id: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getUsers();\r\n  },\r\n  methods: {\r\n    async getUsers() {\r\n      const { data: res } = await this.$http.get(\"/api/users\", {\r\n        params: {\r\n          query: \"\",\r\n          page: 1,\r\n          size: 4,\r\n        },\r\n      });\r\n      if (res.msg.status != 200) {\r\n        // 数据提示\r\n        return this.$message.error(\"数据查询失败\");\r\n      } else {\r\n        this.UserList = res.data;\r\n      }\r\n    },\r\n\r\n    async changState(i) {\r\n      const res = await this.$http.get(\"/api/change\", {\r\n        params: {\r\n          status: this.UserList[i].isno,\r\n          id: this.UserList[i].id,\r\n        },\r\n      });\r\n      // console.log(this.$refs.state.id);\r\n      console.log(res);\r\n      if (res.data.status == 200) {\r\n        // 数据提示\r\n        return this.$message.success(\"操作成功\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/deep/ .el-breadcrumb__inner {\r\n  color: #fff;\r\n}\r\n/deep/.el-breadcrumb__item:last-child .el-breadcrumb__inner {\r\n  color: #fff;\r\n}\r\n.el-table {\r\n  margin: 15px 0 0 0;\r\n}\r\n.el-pagination{\r\n  margin: 15px 0 0 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}