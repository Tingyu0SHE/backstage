{"ast":null,"code":"import \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport VueRouter from 'vue-router';\nimport Login from '../View/Login.vue';\nimport Home from '../components/Home.vue'; // 创建实例对象\n\nvar router = new VueRouter({\n  routes: [// 引入Login路由\n  {\n    path: '/',\n    component: Login\n  }, {\n    path: '/login',\n    component: Login,\n    meta: {\n      title: '登录'\n    }\n  }, {\n    path: '/home',\n    component: Home,\n    meta: {\n      isAout: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.meta.isAout) {\n    log; // 判断是否有token\n    //  console.log(111);\n\n    if (sessionStorage.getItem('token')) {\n      // 判断有token是否和服务传的一致\n      var key = window.atob(sessionStorage.getItem('key'));\n      var token = sessionStorage.getItem('token');\n\n      if (key !== token) {\n        next('/login');\n        return;\n      }\n\n      next();\n    } else {\n      next('./login');\n    }\n  } else {\n    next();\n  }\n});\nrouter.afterEach(function (to) {\n  document.title = to.meta.title || \"后台管理系统\";\n}); //向外暴露出去\n\nexport default router;","map":{"version":3,"names":["VueRouter","Login","Home","router","routes","path","component","meta","title","isAout","beforeEach","to","from","next","log","sessionStorage","getItem","key","window","atob","token","afterEach","document"],"sources":["E:/houtai/backstage/src/router/index.js"],"sourcesContent":["import VueRouter from 'vue-router'\r\n\r\nimport Login from '../View/Login.vue'\r\nimport Home from '../components/Home.vue'\r\n// 创建实例对象\r\nconst router = new VueRouter({\r\n  routes: [\r\n    // 引入Login路由\r\n    { path: '/', component: Login },\r\n    { path: '/login', component: Login, meta: { title: '登录' } },\r\n    { path: '/home', component: Home, meta: { isAout: true } }\r\n  ]\r\n})\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.meta.isAout) {\r\n    log\r\n    // 判断是否有token\r\n    //  console.log(111);\r\n    if (sessionStorage.getItem('token')) {\r\n      // 判断有token是否和服务传的一致\r\n      const key = window.atob(sessionStorage.getItem('key'))\r\n      const token = sessionStorage.getItem('token')\r\n      if (key !== token) {\r\n        next('/login')\r\n        return\r\n      }\r\n      next()\r\n    } else {\r\n      next('./login')\r\n    }\r\n\r\n  } else {\r\n    next()\r\n  }\r\n\r\n})\r\nrouter.afterEach((to) => {\r\n  document.title = to.meta.title || \"后台管理系统\"\r\n})\r\n\r\n//向外暴露出去\r\nexport default router"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,IAAMC,MAAM,GAAG,IAAIH,SAAJ,CAAc;EAC3BI,MAAM,EAAE,CACN;EACA;IAAEC,IAAI,EAAE,GAAR;IAAaC,SAAS,EAAEL;EAAxB,CAFM,EAGN;IAAEI,IAAI,EAAE,QAAR;IAAkBC,SAAS,EAAEL,KAA7B;IAAoCM,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAT;EAA1C,CAHM,EAIN;IAAEH,IAAI,EAAE,OAAR;IAAiBC,SAAS,EAAEJ,IAA5B;IAAkCK,IAAI,EAAE;MAAEE,MAAM,EAAE;IAAV;EAAxC,CAJM;AADmB,CAAd,CAAf;AAQAN,MAAM,CAACO,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;EACpC,IAAIF,EAAE,CAACJ,IAAH,CAAQE,MAAZ,EAAoB;IAClBK,GAAG,CADe,CAElB;IACA;;IACA,IAAIC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAJ,EAAqC;MACnC;MACA,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAZ,CAAZ;MACA,IAAMI,KAAK,GAAGL,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAd;;MACA,IAAIC,GAAG,KAAKG,KAAZ,EAAmB;QACjBP,IAAI,CAAC,QAAD,CAAJ;QACA;MACD;;MACDA,IAAI;IACL,CATD,MASO;MACLA,IAAI,CAAC,SAAD,CAAJ;IACD;EAEF,CAjBD,MAiBO;IACLA,IAAI;EACL;AAEF,CAtBD;AAuBAV,MAAM,CAACkB,SAAP,CAAiB,UAACV,EAAD,EAAQ;EACvBW,QAAQ,CAACd,KAAT,GAAiBG,EAAE,CAACJ,IAAH,CAAQC,KAAR,IAAiB,QAAlC;AACD,CAFD,E,CAIA;;AACA,eAAeL,MAAf"},"metadata":{},"sourceType":"module"}