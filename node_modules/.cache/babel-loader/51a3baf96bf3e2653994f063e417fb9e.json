{"ast":null,"code":"import _objectSpread from \"E:/houtai/backstage/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"E:/houtai/backstage/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/houtai/backstage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var checkEmial = function checkEmial(rule, value, ck) {\n      var email = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n\n      if (email.test(value)) {\n        return ck();\n      }\n\n      ck(new error(\"请输入合法邮箱\"));\n    };\n\n    var checkPhone = function checkPhone(rule, value, ck) {\n      var phone = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\n\n      if (phone.test(value)) {\n        return ck();\n      }\n\n      ck(new error(\"请输入合法手机号\"));\n    };\n\n    return {\n      UserList: [],\n      total: 0,\n      pagnum: 1,\n      pagesize: 2,\n      query: \"\",\n      uninfo: \"\",\n      dialogVisible: false,\n      ruleForms: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名称\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 10,\n          message: \"长度在 3 到 10 个字符\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 12,\n          message: \"长度在 6 到 12 个字符\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"请输入邮箱\",\n          trigger: \"blur\"\n        }, {\n          validator: checkEmial,\n          trigger: \"blur\"\n        }],\n        phone: [{\n          required: true,\n          message: \"请输入手机号码\",\n          trigger: \"blur\"\n        }, {\n          validator: checkPhone,\n          trigger: \"blur\"\n        }]\n      },\n      updtaeDate: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getUsers();\n  },\n  methods: {\n    getUsers: function getUsers() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get(\"/api/users\", {\n                  params: {\n                    query: _this.query,\n                    page: _this.pagnum,\n                    size: _this.pagesize\n                  }\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.msg.status != 200)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error(\"数据查询失败\"));\n\n              case 8:\n                _this.UserList = res.data;\n                _this.total = res.msg.total;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    changState: function changState(datas) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http.get(\"/api/change\", {\n                  params: {\n                    status: datas.isno,\n                    id: datas.id\n                  }\n                });\n\n              case 2:\n                res = _context2.sent;\n\n                if (!(res.data.status == 200)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.success(\"操作成功\"));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleSizeChange: function handleSizeChange(newsize) {\n      // console.log(newsize);\n      this.pagesize = newsize;\n      this.getUsers();\n    },\n    handleCurrentChange: function handleCurrentChange(newpage) {\n      this.pagnum = newpage;\n      this.getUsers();\n    },\n    search: function search() {\n      this.getUsers();\n    },\n    Clear: function Clear() {\n      this.getUsers();\n    },\n    Sent: function Sent() {\n      this.dialogVisible = true;\n    },\n    addFrom: function addFrom() {\n      var _this3 = this;\n\n      this.$refs.addfrom.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(vail) {\n          var _yield$_this3$$http$p, res;\n\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (vail) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this3.$http.post(\"/api/register\", _objectSpread({}, _this3.ruleForms));\n\n                case 4:\n                  _yield$_this3$$http$p = _context3.sent;\n                  res = _yield$_this3$$http$p.data;\n                  console.log(res);\n\n                  if (!(res.status != 200)) {\n                    _context3.next = 9;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this3.$message.error(\"用户添加失败\"));\n\n                case 9:\n                  _this3.$message.success(\"添加成功\");\n\n                  _this3.dialogVisible = false;\n\n                  _this3.$refs.addfrom.resetFields();\n\n                  _this3.getUsers();\n\n                case 13:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    updataFun: function updataFun(id) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _yield$_this4$$http$g, res;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this4.$http.get(\"/api/users/\" + id);\n\n              case 2:\n                _yield$_this4$$http$g = _context4.sent;\n                res = _yield$_this4$$http$g.data;\n                console.log(res);\n\n                if (!(res.msg.status != 200)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _this4.$message.error(\"获取数据失败\"));\n\n              case 7:\n                _this4.updtaeDate;\n                _this4.updateinfo = true;\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    updateDun: function updateDun(id) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _yield$_this5$$http$p, res;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this5.$http.post(\"/api/upuser\", {\n                  id: id,\n                  email: _this5.updateinfo.email,\n                  phone: _this5.updateinfo.phone\n                });\n\n              case 2:\n                _yield$_this5$$http$p = _context5.sent;\n                res = _yield$_this5$$http$p.data;\n\n                if (!(res.status != 200)) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", _this5.$message.error(\"修改失败\"));\n\n              case 6:\n                _this5.updateinfo = false;\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;EACAA,IADA,kBACA;IACA;MACA,YACA,+DADA;;MAEA;QACA;MACA;;MACAC;IACA,CAPA;;IAQA;MACA,YACA,8EADA;;MAEA;QACA;MACA;;MACAA;IACA,CAPA;;IAQA;MACAC,YADA;MAEAC,QAFA;MAGAC,SAHA;MAIAC,WAJA;MAKAC,SALA;MAMAC,UANA;MAOAC,oBAPA;MAQAC;QACAC,YADA;QAEAC,YAFA;QAGAC,SAHA;QAIAC;MAJA,CARA;MAcAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,yBAHA;UAIAC;QAJA,CAFA,CADA;QAUAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,yBAHA;UAIAC;QAJA,CAFA,CAVA;QAmBAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA,CAnBA;QAuBAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA;MAvBA,CAdA;MA0CAI;IA1CA;EA4CA,CA9DA;EA+DAC,OA/DA,qBA+DA;IACA;EACA,CAjEA;EAkEAC;IACAC,QADA,sBACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC;oBACAnB,kBADA;oBAEAoB,kBAFA;oBAGAC;kBAHA;gBADA,EADA;;cAAA;gBAAA;gBACAC,GADA,yBACA5B,IADA;;gBAAA,MAQA4B,qBARA;kBAAA;kBAAA;gBAAA;;gBAAA,iCAUA,8BAVA;;cAAA;gBAYA;gBAEA;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBA,CAjBA;IAmBAC,UAnBA,sBAmBAC,KAnBA,EAmBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAL;oBACAM,kBADA;oBAEAC;kBAFA;gBADA,EADA;;cAAA;gBACAJ,GADA;;gBAAA,MAQAA,sBARA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAUA,+BAVA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYA,CA/BA;IAgCAK,gBAhCA,4BAgCAC,OAhCA,EAgCA;MACA;MACA;MACA;IACA,CApCA;IAqCAC,mBArCA,+BAqCAC,OArCA,EAqCA;MACA;MACA;IACA,CAxCA;IAyCAC,MAzCA,oBAyCA;MACA;IACA,CA3CA;IA4CAC,KA5CA,mBA4CA;MACA;IACA,CA9CA;IA+CAC,IA/CA,kBA+CA;MACA;IACA,CAjDA;IAkDAC,OAlDA,qBAkDA;MAAA;;MACA;QAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,IACAC,IADA;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAAA;kBAAA,OAEA,qDACA,gBADA,EAFA;;gBAAA;kBAAA;kBAEAb,GAFA,yBAEA5B,IAFA;kBAKA0C;;kBALA,MAMAd,iBANA;oBAAA;oBAAA;kBAAA;;kBAAA,kCAMA,+BANA;;gBAAA;kBAOA;;kBACA;;kBACA;;kBACA;;gBAVA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAYA,CA/DA;IAgEAe,SAhEA,qBAgEAX,EAhEA,EAgEA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,oCADA;;cAAA;gBAAA;gBACAJ,GADA,yBACA5B,IADA;gBAEA0C;;gBAFA,MAGAd,qBAHA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAGA,+BAHA;;cAAA;gBAIA;gBACA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAtEA;IAuEAgB,SAvEA,qBAuEAZ,EAvEA,EAuEA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAA,MADA;kBAEApB,8BAFA;kBAGAC;gBAHA,EADA;;cAAA;gBAAA;gBACAe,GADA,yBACA5B,IADA;;gBAAA,MAMA4B,iBANA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAMA,6BANA;;cAAA;gBAOA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA;EA/EA;AAlEA","names":["data","ck","UserList","total","pagnum","pagesize","query","uninfo","dialogVisible","ruleForms","username","password","email","phone","rules","required","message","trigger","min","max","validator","updtaeDate","mounted","methods","getUsers","params","page","size","res","changState","datas","status","id","handleSizeChange","newsize","handleCurrentChange","newpage","search","Clear","Sent","addFrom","vail","console","updataFun","updateDun"],"sourceRoot":"src/View","sources":["User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/Welcome' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- card -->\r\n    <el-card class=\"box-card\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"10\">\r\n          <el-input\r\n            placeholder=\"请搜索用户名\"\r\n            :clearable=\"true\"\r\n            @clear=\"Clear\"\r\n            v-model=\"query\"\r\n          >\r\n            <el-button\r\n              slot=\"append\"\r\n              icon=\"el-icon-search\"\r\n              @click=\"search\"\r\n            ></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\"\r\n          ><el-button type=\"primary\" @click=\"Sent\">添加用户</el-button></el-col\r\n        >\r\n      </el-row>\r\n\r\n      <!-- table -->\r\n      <el-table :data=\"UserList\" border style=\"width: 100%\">\r\n        <el-table-column type=\"index\" label=\"序号\" width=\"50\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"r_name\" label=\"角色\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"isno\" label=\"状态\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <div>\r\n              <el-switch\r\n                ref=\"state\"\r\n                v-model=\"scope.row.isno\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#ff4949\"\r\n                @change=\"changState(scope.row)\"\r\n              >\r\n              </el-switch>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template>\r\n            <div>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"编辑\"\r\n                placement=\"top\"\r\n                @click=\"updataFun(scope.row.id)\"\r\n              >\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"分配角色\"\r\n                placement=\"top\"\r\n              >\r\n                <el-button\r\n                  type=\"warning\"\r\n                  icon=\"el-icon-share\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip\r\n                class=\"item\"\r\n                effect=\"dark\"\r\n                content=\"删除\"\r\n                placement=\"top\"\r\n              >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  size=\"mini\"\r\n                ></el-button>\r\n              </el-tooltip>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pagnum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\"\r\n        :page-size=\"pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      >\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <el-dialog title=\"添加用户\" width=\"50%\" :visible.sync=\"dialogVisible\">\r\n      <el-form\r\n        label-width=\"70px\"\r\n        ref=\"addfrom\"\r\n        :model=\"ruleForms\"\r\n        :rules=\"rules\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"ruleForms.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"ruleForms.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"ruleForms.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"ruleForms.phone\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addFrom\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog title=\"修改用户\" \r\n    width=\"50%\" \r\n    :visible.sync=\"updateinfo\">\r\n      <el-form\r\n        label-width=\"70px\"\r\n        ref=\"addfrom\"\r\n        :rules=\"upRules\"\r\n        :model=\"updateDate\"\r\n      >\r\n        <el-form-item\r\n          label=\"用户名\"\r\n          prop=\"name\"\r\n        >\r\n          <el-input disabled v-model=\"updateDate.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item \r\n        label=\"邮箱\" \r\n        v-model=\"updateDate.email\" \r\n        prop=\"ema\">\r\n          <el-input></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"password\">\r\n          <el-input></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"updateinfo = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateDun()\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    var checkEmial = (rule, value, ck) => {\r\n      let email =\r\n        /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n      if (email.test(value)) {\r\n        return ck();\r\n      }\r\n      ck(new error(\"请输入合法邮箱\"));\r\n    };\r\n    var checkPhone = (rule, value, ck) => {\r\n      let phone =\r\n        /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n      if (phone.test(value)) {\r\n        return ck();\r\n      }\r\n      ck(new error(\"请输入合法手机号\"));\r\n    };\r\n    return {\r\n      UserList: [],\r\n      total: 0,\r\n      pagnum: 1,\r\n      pagesize: 2,\r\n      query: \"\",\r\n      uninfo: \"\",\r\n      dialogVisible: false,\r\n      ruleForms: {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" },\r\n          {\r\n            min: 3,\r\n            max: 10,\r\n            message: \"长度在 3 到 10 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          {\r\n            min: 6,\r\n            max: 12,\r\n            message: \"长度在 6 到 12 个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\r\n          { validator: checkEmial, trigger: \"blur\" },\r\n        ],\r\n        phone: [\r\n          { required: true, message: \"请输入手机号码\", trigger: \"blur\" },\r\n          { validator: checkPhone, trigger: \"blur\" },\r\n        ],\r\n      },\r\n      updtaeDate: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getUsers();\r\n  },\r\n  methods: {\r\n    async getUsers() {\r\n      const { data: res } = await this.$http.get(\"/api/users\", {\r\n        params: {\r\n          query: this.query,\r\n          page: this.pagnum,\r\n          size: this.pagesize,\r\n        },\r\n      });\r\n      if (res.msg.status != 200) {\r\n        // 数据提示\r\n        return this.$message.error(\"数据查询失败\");\r\n      } else {\r\n        this.UserList = res.data;\r\n\r\n        this.total = res.msg.total;\r\n      }\r\n    },\r\n\r\n    async changState(datas) {\r\n      const res = await this.$http.get(\"/api/change\", {\r\n        params: {\r\n          status: datas.isno,\r\n          id: datas.id,\r\n        },\r\n      });\r\n\r\n      if (res.data.status == 200) {\r\n        // 数据提示\r\n        return this.$message.success(\"操作成功\");\r\n      }\r\n    },\r\n    handleSizeChange(newsize) {\r\n      // console.log(newsize);\r\n      this.pagesize = newsize;\r\n      this.getUsers();\r\n    },\r\n    handleCurrentChange(newpage) {\r\n      this.pagnum = newpage;\r\n      this.getUsers();\r\n    },\r\n    search() {\r\n      this.getUsers();\r\n    },\r\n    Clear() {\r\n      this.getUsers();\r\n    },\r\n    Sent() {\r\n      this.dialogVisible = true;\r\n    },\r\n    addFrom() {\r\n      this.$refs.addfrom.validate(async (vail) => {\r\n        if (!vail) return;\r\n        const { data: res } = await this.$http.post(\"/api/register\", {\r\n          ...this.ruleForms,\r\n        });\r\n        console.log(res);\r\n        if (res.status != 200) return this.$message.error(\"用户添加失败\");\r\n        this.$message.success(\"添加成功\");\r\n        this.dialogVisible = false;\r\n        this.$refs.addfrom.resetFields();\r\n        this.getUsers();\r\n      });\r\n    },\r\n    async updataFun(id) {\r\n      const { data: res } = await this.$http.get(\"/api/users/\" + id);\r\n      console.log(res);\r\n      if (res.msg.status != 200) return this.$message.error(\"获取数据失败\");\r\n      this.updtaeDate;\r\n      this.updateinfo = true;\r\n    },\r\n    async updateDun(id) {\r\n      const { data: res } = await this.$http.post(\"/api/upuser\", {\r\n        id,\r\n        email: this.updateinfo.email,\r\n        phone: this.updateinfo.phone,\r\n      });\r\n      if (res.status != 200) return this.$message.error(\"修改失败\");\r\n      this.updateinfo = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/deep/ .el-breadcrumb__inner {\r\n  color: #fff;\r\n}\r\n/deep/.el-breadcrumb__item:last-child .el-breadcrumb__inner {\r\n  color: #fff;\r\n}\r\n.el-table {\r\n  margin: 15px 0 0 0;\r\n}\r\n.el-pagination {\r\n  margin: 15px 0 0 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}